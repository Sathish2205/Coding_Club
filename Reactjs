import { useEffect, useState } from "react"
import './main.css'
import { Link, useNavigate } from "react-router-dom"
import { initializeApp } from "firebase/app";
import { createUserWithEmailAndPassword, getAuth, signOut } from "firebase/auth";
import UseAuth from "./user";

let url = "http://localhost:3001/Students"

function Main() {
    let navigate = useNavigate()

    const [data, setData] = useState("")

    let currentUser=UseAuth()

    useEffect(() => {
        fetch(url, { method: "GET" })
            .then((res) => {
                return res.json()
            })
            .then((resp) => {
                console.log(resp)
                setData(resp)
            })
            .catch((err) => {
                console.log("Error", err)
            })
    }, [])

    //Delete Functionality

    const deleteData = (id) => {
        console.log(id)
        if (window.confirm("Delete The Data?")) {
            fetch("http://localhost:3001/Students/" + id, { method: "DELETE" })
                .then((res) => {
                    alert("Deleted Successfully")
                    window.location.reload()
                })
                .catch((err) => {
                    console.log("error", err)
                })
        }
    }

    //Edit Functionality

    const editData = (id) => {
        console.log(id)
        navigate("/edit/" + id)
    }

    // Filter Functionality

    const [value, setValue] = useState("")

    const changeValue = (e) => {
        setValue(e.target.value)
    }
    const filterData = (e) => {
        e.preventDefault()
        fetch(`http://localhost:3001/Students?q=${value}`, { method: "GET" })
            .then((res) => {
                return res.json()
            })
            .then((resp) => {
                setData(resp)
                console.log(resp)
            })
    }

    let arr=['id','name','email','phone']

    const [sort,setSort]=useState("")

    const sortData=(e)=>{
        e.preventDefault()
        let value=e.target.value
        setSort(value)

        fetch(`http://localhost:3001/Students?_sort=${value}&_order=asc `, { method: "GET" })
            .then((res) => {
                return res.json()
            })
            .then((resp) => {
                setData(resp)
                console.log(resp)
            })

    }
//LogOut operation

const firebaseConfig = {
        apiKey: "AIzaSyBwPNIMy-IsnKmJUgOhXhvZatgT8xtIdwQ",
        authDomain: "besant-task5.firebaseapp.com",
        projectId: "besant-task5",
        storageBucket: "besant-task5.firebasestorage.app",
        messagingSenderId: "913388772914",
        appId: "1:913388772914:web:90d57453e2ace35c90a62b",
        measurementId: "G-73V6L7PGSD"
    };
    const app = initializeApp(firebaseConfig);
    const auth = getAuth()

    const LogOut=(e)=>{
        e.preventDefault()
        signOut(auth)
        .then(()=>{
            alert("Logged Out Successfully")
            navigate("/register")
        })
        .catch((err)=>{
            console.log("Error",err)
        })
    }
   

    return (
        <div className="wraper">
            <div style={{ display: "flex", justifyContent: "space-between", padding: "20px" }}>
                <h1> Student Data Entry</h1>
                <form onKeyUp={filterData}>
                    <input type="text" value={value} onChange={changeValue} className="btn btn-outline-dark" placeholder="Enter text to search" />
                    <button type="submit" className="btn btn-secondary">Search</button>
                </form>
                <h1 className="user" style={{fontSize:"20px"}}>Active User :{currentUser?.email}</h1>

                <div className="user">
                    <Link to='/form' className="btn btn-success">Add(+)</Link>
                    <button onClick={LogOut} className="btn btn-dark" > Log Out</button>
                </div>
            </div>
            <div>
                Sort By 
                <select value={sort} onChange={sortData}>
                    <option>--Select--</option>
                    {arr.map((item)=>(
                        <option>{item}</option>
                    ))}
                </select>
            </div>
            <table>
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Name</th>
                        <th>Mail</th>
                        <th>Phone</th>
                        <th>Address</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    {data && data.map((item) => (
                        <tr>
                            <td>{item.id} </td>
                            <td>{item.name} </td>
                            <td>{item.email} </td>
                            <td>{item.phone} </td>
                            <td>{item.address} </td>
                            <td>
                                <button onClick={() => { editData(item.id) }} className="btn btn-primary">Edit</button>
                                <button onClick={() => { deleteData(item.id) }} className="btn btn-danger">Delete</button>
                            </td>
                        </tr>
                    ))}

                </tbody>
            </table>
        </div>


    )
}
export default Main;
